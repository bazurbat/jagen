### Jagen Bash completion definitions ###

_jagen_complete() {
    local word="$2" prev_word="$3"
    local cur prev bin dir build_dir
    local jagen_command jagen_subcommand

    bin=${COMP_WORDS[0]}
    dir=${bin%/*}
    if [[ "$dir" == "$bin" ]]; then
        dir="$jagen_dir"
        build_dir="$jagen_build_dir"
    else
        build_dir=$(source "$dir/env.sh"
                    echo "$jagen_build_dir")
    fi
    [ "$dir" ] || return 0

    jagen_command=${COMP_WORDS[1]}
    jagen_subcommand=${COMP_WORDS[2]}

    local names_file="$build_dir/.jagen-names"
    local scm_names_file="$build_dir/.jagen-scm-names"
    local configs_file="$build_dir/.jagen-configs"
    local targets_file="$build_dir/.jagen-targets"
    local layers_file="$build_dir/.jagen-layers"

    local top_cmds='help clean refresh build source src list update'
    local src_cmds='dirty status clean update delete each'
    local src_each_opt='--type'
    local src_types='git hg repo'
    local help_opt='-h --help'
    local build_opt='-m --match -c --clean -a --all -n --no-rebuild -p --progress -q --quiet'
    local list_packages_opt='--depth -d --all -a'

    _get_comp_words_by_ref -n : cur prev

    if [[ "$prev" =~ jagen$ && ${#COMP_WORDS[*]} -le 2 ]]; then
        COMPREPLY=($(compgen -W "$help_opt $top_cmds" -- "$cur"))
        return
    fi

    case $jagen_command in
        clean)
            if [[ "$prev" == "clean" ]]; then
                COMPREPLY=($(compgen -W "$help_opt $(cat "$configs_file")" -- "$cur"))
            else
                COMPREPLY=($(compgen -W "$(cat "$configs_file")" -- "$cur"))
            fi
            ;;
        refresh)
            COMPREPLY=($(compgen -W "$help_opt" -- "$cur")) ;;
        build)
            COMPREPLY=($(compgen -W "$help_opt $build_opt $(cat "$names_file") $(cat "$targets_file")" -- "$cur")) ;;
        src|source)
            if [[ "$prev" == "source" ]] || [[ "$prev" == "src" ]]; then
                COMPREPLY=($(compgen -W "$help_opt $src_cmds" -- "$cur"))
            else
                if [[ "$jagen_subcommand" == "each" ]]; then
                    if [[ "$prev" == "--type" ]]; then
                        COMPREPLY=($(compgen -W "$src_types" -- "$cur"))
                    else
                        COMPREPLY=($(compgen -W "$help_opt $src_each_opt" -- "$cur"))
                    fi
                else
                    COMPREPLY=($(compgen -W "$(cat "$scm_names_file")" -- "$cur"))
                fi
            fi
            ;;
        list)
            if [[ "$prev" == "list" ]]; then
                COMPREPLY=($(compgen -W "$help_opt packages layers" -- "$cur"))
            elif [[ "$jagen_subcommand" == "packages" ]]; then
                COMPREPLY=($(compgen -W "$help_opt $list_packages_opt" -- "$cur"))
            fi ;;
        update)
            COMPREPLY=($(compgen -W "$help_opt jagen self $(cat "$layers_file")" -- "$cur")) ;;
    esac

    __ltrim_colon_completions "$cur"
}

complete -F _jagen_complete jagen

### End of Jagen Bash completion definitions ###
