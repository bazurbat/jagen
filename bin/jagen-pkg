#!/bin/sh

if [ "$1" = '-q' ]; then
    shift
    pkg_query="${1:?}"
    pkg_name="${2:?}"
    pkg_config="$3"
    # do not print anything else to allow usage in scripts
    jagen_debug=
else
    pkg_name="${1:?}"
    pkg_stage="${2:?}"
    pkg_config="$3"
    shift 3
    pkg_args="$@"
fi

. "${jagen_dir:?}/src/pkg.sh" || die

_pkg_stamp_name="${pkg_name}__${pkg_stage}${pkg_config:+__${pkg_config}}"
pkg_log="${jagen_log_dir:?}/${_pkg_stamp_name}.log"
export pkg_work_dir="${jagen_build_dir:?}/$pkg_name"

if [ -z "$pkg_query" ]; then
    : >"$pkg_log"
fi

cd "$jagen_build_dir" || die

if [ "$pkg_config" ]; then
    import "config/$pkg_config"
fi

export pkg_build_dir="$pkg_work_dir${pkg_config:+/$pkg_config}"
export pkg_install_dir="$pkg_staging_dir$pkg_prefix"

pkg_build_generator="$jagen_cmake_generator"

include "$jagen_include_dir/$pkg_name" || die

if ! [ "$pkg_stage" = "unpack" -o "$pkg_stage" = "patch" ]; then
    include "$jagen_include_dir/${pkg_name}__${pkg_config}" || die
fi

# refresh the value because include script may change the composing variables
pkg_install_dir="$pkg_staging_dir$pkg_prefix"

_pkg_file=$(find_in_path "pkg/${pkg_name}.sh")
if [ "$_pkg_file" ]; then
    include "$_pkg_file"
fi
unset _pkg_file

if [ "$pkg_query" ]; then
    case $pkg_query in
        work_dir)
            printf '%s\n' "$pkg_work_dir" ;;
        source_dir)
            printf '%s\n' "$pkg_source_dir" ;;
        build_dir)
            printf '%s\n' "$pkg_build_dir" ;;
        install_dir)
            printf '%s\n' "$pkg_install_dir" ;;
    esac
    exit 0
fi

case $pkg_stage in
    unpack)
        cd "$jagen_build_dir"
        ;;
    patch)
        [ "$pkg_source_dir" ] || exit 0
        pkg_run cd "$pkg_source_dir"
        ;;
    *)
        if [ "$pkg_build_dir" ]; then
            pkg_run mkdir -p "$pkg_build_dir"
            pkg_run cd "$pkg_build_dir"
        fi ;;
esac

run_stage() {
    local stage pkg
    stage=$(echo "$1" | sed 's/-/_/')
    pkg="$pkg_name${pkg_config:+ ($pkg_config)}"

    if is_function "$stage"; then
        debug "$pkg: $stage"
        eval "$stage" $pkg_args >>"$pkg_log" 2>&1 ||
            die "failed to run $pkg_stage stage of package $pkg"
    else
        return 2
    fi
}

run_stage "jagen_pkg_${pkg_stage}_${pkg_config}" ||
    run_stage "jagen_pkg_${pkg_stage}"

exit 0
